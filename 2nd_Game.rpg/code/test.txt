SX, SY = (800,800)
def setup():
    size(800,800)
    frameRate(120)
    global img, tilesize, IsX, IsY, Xp, Yp, MAP, newimg, xspeed, yspeed, speed, chunks
    speed = 2
    img = loadImage("/Users/9622663/Downloads/q1updarted quad in pwogrewss.png")
    #each image is 10x original size
    xspeed = 0
    yspeed = 0
    tilesize = 80
    IsX, IsY = (8,8)
    Xp, Yp = (0,0)
    print IsX,IsY
    MAP = [[0 for x in range(60)] for y in range(60)]
    chunks = [[[0 for x in range(15)] for y in range(15)] for z in range(50)]
    global newimg
    newimg = [0 for x in range(IsX)]
    for y in range(IsY):
        for x in range(IsX):
            newimg[x] = img.get(x*tilesize,y*tilesize,tilesize,tilesize)
    Cpw = random(1,5)
    Cph = random(1,5)
    Clh = random(1,5)
    Clw = random(1,5)
    for y in range(Clh):
        chunks[0][y][0]
    for x in range(Cpw):
        chunks[x][Clh][0]
    for y in range(Cph):
        chunks[Cpw][Clh+y][0]
    for x in range(Clw):
        chunks[Cpw+x][Clh+Cph][0]
    for y in range(Cph+Clw):
        chunks[Cpw+Clw][(Clh+Cph)-y][0]
        
    #taking a prewidth, preheight, postwidth, and postheight and making an j-shaped room
    #     /----\
    #/---/     |
    #|         |
    #|         |
    #\---------/

def draw():
    global Xp, Yp
    print Xp, Yp
    Xp += xspeed
    Yp += yspeed
    ModXPrecalc = (Xp%tilesize)-tilesize
    ModYPrecalc = (Yp%tilesize)-tilesize
    for y in range((SY+tilesize)/tilesize):
        for x in range((SX+tilesize)/tilesize):
            image(newimg[MAP[x][y]],x*tilesize+ModXPrecalc,y*tilesize+ModYPrecalc)

def keyPressed():
    global xspeed, yspeed
    if key == 'w':
        yspeed = speed
    if key == 's':
        yspeed = -speed
    if key == 'a':
        xspeed = speed
    if key == 'd':
        xspeed = -speed
def keyReleased():
    global xspeed, yspeed
    if key == 'w' or key == 's':
        yspeed = 0
    if key == 'a' or key == 'd':
        xspeed = 0

